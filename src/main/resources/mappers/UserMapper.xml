<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuyong.simplems.system.dao.UserMapper">
<!--    Base-->
    <select id="list" resultType="com.liuyong.simplems.system.ent.User">
        select
        *
        from user
    </select>

    <select id="getById" resultType="com.liuyong.simplems.system.ent.User">
        select
        *
        from user
        where id = #{id}
    </select>

    <insert id="save" parameterType="com.liuyong.simplems.system.ent.User">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user(user_name, description, account, password)
        values (#{userName}, #{description}, #{account}, #{password})
    </insert>

    <delete id="remove">
        delete
        from user
        where id = #{id}
    </delete>
    
    <update id="update">
        update user
        set id = #{id},
        user_name = #{userName},
        description = #{description},
        account = #{account},
        password = #{password}
        where id = #{id}
    </update>


    <resultMap id="UserRoleMap" type="com.liuyong.simplems.system.ent.User">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <collection property="roleList" ofType="com.liuyong.simplems.system.ent.Role">
            <id column="r_id" jdbcType="INTEGER" property="id" />
            <result column="role_name" jdbcType="VARCHAR" property="roleName" />
            <result column="r_description" jdbcType="VARCHAR" property="description" />
            <collection property="menuList" ofType="com.liuyong.simplems.system.ent.Menu">
                <id column="m_id" jdbcType="INTEGER" property="id" />
                <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
                <result column="m_description" jdbcType="VARCHAR" property="description" />
                <result column="parent_menu_id" jdbcType="VARCHAR" property="parentMenuId" />
            </collection>
        </collection>
    </resultMap>

    <select id="listUserRoles" resultMap="UserRoleMap">
        select u.*, r.id as r_id, r.role_name, r.description as r_description, m.id as m_id, m.menu_name, m.description as m_description, m.parent_menu_id
        from user as u
        left join user_role as ur on u.id = ur.user_id
        left join role as r on ur.role_id = r.id
        left join role_menu as rm on r.id = rm.role_id
        left join menu as m on rm.menu_id = m.id
    </select>

    <select id="getUserRoleById" resultMap="UserRoleMap">
        select u.*, r.id as r_id, r.role_name, r.description as r_description
        from user as u
        left join user_role as ur on u.id = ur.user_id
        left join role as r on ur.role_id = r.id
        left join role_menu as rm on r.id = rm.role_id
        left join menu as m on rm.menu_id = m.id
        where u.id = #{id}
    </select>

    <insert id="saveUserRoleBatch" parameterType="com.liuyong.simplems.system.ent.UserRole">
        insert into user_role(user_id, role_id)
        values
        <foreach collection="list" item="userRole" index="index" separator=",">
            (#{userRole.userId}, #{userRole.roleId})
        </foreach>
    </insert>

    <delete id="removeUserRole">
        delete
        from user_role
        where user_id = #{useId}
    </delete>

    <select id="listUserRoleMenusByLoginInfo" parameterType="com.liuyong.simplems.system.ent.LoginInfo" resultMap="UserRoleMap">
        select u.*, r.id as r_id, r.role_name, r.description as r_description, m.id as m_id, m.menu_name, m.description as m_description, m.parent_menu_id
        from user as u
        left join user_role as ur on u.id = ur.user_id
        left join role as r on ur.role_id = r.id
        left join role_menu as rm on r.id = rm.role_id
        left join menu as m on rm.menu_id = m.id
        where u.account = #{account}
    </select>

    <select id="listUserRoleMenusByAccount" parameterType="java.lang.String" resultMap="UserRoleMap">
        select u.*, r.id as r_id, r.role_name, r.description as r_description, m.id as m_id, m.menu_name, m.description as m_description, m.parent_menu_id
        from user as u
        left join user_role as ur on u.id = ur.user_id
        left join role as r on ur.role_id = r.id
        left join role_menu as rm on r.id = rm.role_id
        left join menu as m on rm.menu_id = m.id
        where u.account = #{account}
    </select>
</mapper>